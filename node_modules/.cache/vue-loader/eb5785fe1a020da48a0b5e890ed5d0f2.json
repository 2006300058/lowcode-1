{"remainingRequest":"D:\\VsCodepratice\\lowcodedaima\\ainiake\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VsCodepratice\\lowcodedaima\\ainiake\\src\\components\\CustomComponent\\CVueColor.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\VsCodepratice\\lowcodedaima\\ainiake\\src\\components\\CustomComponent\\CVueColor.vue","mtime":1661061397969},{"path":"D:\\VsCodepratice\\lowcodedaima\\ainiake\\node_modules\\css-loader\\dist\\cjs.js","mtime":1660470932862},{"path":"D:\\VsCodepratice\\lowcodedaima\\ainiake\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1660470933396},{"path":"D:\\VsCodepratice\\lowcodedaima\\ainiake\\node_modules\\postcss-loader\\src\\index.js","mtime":1660470933373},{"path":"D:\\VsCodepratice\\lowcodedaima\\ainiake\\node_modules\\less-loader\\dist\\cjs.js","mtime":1660470948292},{"path":"D:\\VsCodepratice\\lowcodedaima\\ainiake\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660470913585},{"path":"D:\\VsCodepratice\\lowcodedaima\\ainiake\\node_modules\\vue-loader\\lib\\index.js","mtime":1660470933396}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouY29sb3ItcG9wb3ZlciB7DQogIHBhZGRpbmc6IDBweDsNCn0NCi5jb2xvci1wcmV2aWV3IHsNCiAgZGlzcGxheTogYmxvY2s7DQogIHdpZHRoOiA4MHB4Ow0KICBoZWlnaHQ6IDIwcHg7DQogIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMTAyLCAxMDIsIDEwMiwgMC43NDcpOw0KICBjYXJldC1jb2xvcjogdHJhbnNwYXJlbnQ7DQp9DQo="},{"version":3,"sources":["CVueColor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CVueColor.vue","sourceRoot":"src/components/CustomComponent","sourcesContent":["<template>\r\n  <div class=\"color-picker\">\r\n    <el-popover\r\n      v-model=\"showPickColor\"\r\n      placement=\"bottom\"\r\n      trigger=\"manual\"\r\n      popper-class=\"color-popover\"\r\n    >\r\n      <sketch-pick\r\n        :value=\"currentColor\"\r\n        :preset-colors=\"presetColors\"\r\n        @input=\"handleChangeColor\"\r\n      >\r\n      </sketch-pick>\r\n      <span\r\n        slot=\"reference\"\r\n        @click=\"handleShowColorPicker\"\r\n        class=\"color-preview\" :style=\"`backgroundColor: ${currentColor}`\">\r\n      </span>\r\n    </el-popover>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { Sketch } from 'vue-color';\r\n\r\nexport default {\r\n  components: {\r\n    'sketch-pick': Sketch,\r\n  },\r\n  props: {\r\n    value: {\r\n      type: String,\r\n      require: true,\r\n      default: null,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      currentColor: this.value,\r\n      showPickColor: false,\r\n      presetColors: ['#D20000', '#FF0000', '#FFA200', '#EBDF00', '#7ED332', '#00B442', '#010192', '#fff192'],\r\n    };\r\n  },\r\n  methods: {\r\n    handleShowColorPicker(e) {\r\n      e.stopPropagation();\r\n      this.showPickColor = true;\r\n      document.addEventListener('click', () => {\r\n        this.showPickColor = false;\r\n      });\r\n    },\r\n    handleChangeColor(color) {\r\n      const { hex8 } = color;\r\n      this.currentColor = hex8;\r\n      this.$emit('input', hex8);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.color-popover {\r\n  padding: 0px;\r\n}\r\n.color-preview {\r\n  display: block;\r\n  width: 80px;\r\n  height: 20px;\r\n  border: 2px solid rgba(102, 102, 102, 0.747);\r\n  caret-color: transparent;\r\n}\r\n</style>\r\n"]}]}