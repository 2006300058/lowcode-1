{"remainingRequest":"D:\\VsCodepratice\\lowcodedaima\\ainiake\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VsCodepratice\\lowcodedaima\\ainiake\\src\\components\\MainEditorArea\\editorComponent\\CBarChart.vue?vue&type=style&index=0&id=5c193583&lang=less&scoped=true&","dependencies":[{"path":"D:\\VsCodepratice\\lowcodedaima\\ainiake\\src\\components\\MainEditorArea\\editorComponent\\CBarChart.vue","mtime":1661061397973},{"path":"D:\\VsCodepratice\\lowcodedaima\\ainiake\\node_modules\\css-loader\\dist\\cjs.js","mtime":1660470932862},{"path":"D:\\VsCodepratice\\lowcodedaima\\ainiake\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1660470933396},{"path":"D:\\VsCodepratice\\lowcodedaima\\ainiake\\node_modules\\postcss-loader\\src\\index.js","mtime":1660470933373},{"path":"D:\\VsCodepratice\\lowcodedaima\\ainiake\\node_modules\\less-loader\\dist\\cjs.js","mtime":1660470948292},{"path":"D:\\VsCodepratice\\lowcodedaima\\ainiake\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660470913585},{"path":"D:\\VsCodepratice\\lowcodedaima\\ainiake\\node_modules\\vue-loader\\lib\\index.js","mtime":1660470933396}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmJhcmNoYXJ0LWJveCB7DQogIGNhcmV0LWNvbG9yOiB0cmFuc3BhcmVudDsNCiAgb3ZlcmZsb3c6IGF1dG87DQogIGhlaWdodDogMTAwJTsNCiAgd2lkdGg6IDEwMCU7DQogIC5tYWluIHsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgd2lkdGg6IDEwMCU7DQogIH0NCn0NCg=="},{"version":3,"sources":["CBarChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CBarChart.vue","sourceRoot":"src/components/MainEditorArea/editorComponent","sourcesContent":["<template>\r\n    <div\r\n      class=\"barchart-box\"\r\n      :style=\"boxStyle\"\r\n    >\r\n        <v-chart ref=\"chart\" class=\"main\"\r\n          :option=\"chartOptions.getDataType === 'static' ? BarChartOption : apiData\"\r\n          :autoresize=\"true\">\r\n        </v-chart>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nexport default {\r\n  props: {\r\n    data: {\r\n      type: Object,\r\n      require: false,\r\n      default: null,\r\n    },\r\n  },\r\n  components: {\r\n  },\r\n  watch: {\r\n    // eslint-disable-next-line func-names\r\n    'chartOptions.getDataType': function (newV) {\r\n      if (newV === 'get') {\r\n        this.$axios.get(this.chartOptions.tableDataUrl).then((res) => {\r\n          const showRes = this.initEchart(res.data);\r\n          this.apiData = showRes;\r\n        });\r\n      }\r\n    },\r\n    // eslint-disable-next-line func-names\r\n    'chartOptions.tableDataUrl': function (newUrl) {\r\n      if (this.chartOptions.getDataType === 'get') {\r\n        this.$axios.get(newUrl).then((res) => {\r\n          const showRes = this.initEchart(res.data);\r\n          this.apiData = showRes;\r\n        });\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    boxStyle() {\r\n      const { bgcolor } = this.data;\r\n      const {\r\n        fourBorderRadius,\r\n      } = this.normalOptiosn;\r\n      const {\r\n        left,\r\n        right,\r\n        top,\r\n        bottom,\r\n      } = fourBorderRadius;\r\n      return {\r\n        backgroundColor: bgcolor,\r\n        borderRadius: `${top}px ${right}px ${bottom}px ${left}px`,\r\n      };\r\n    },\r\n    normalOptiosn() {\r\n      return this.data.data.componentData;\r\n    },\r\n    chartOptions() {\r\n      return this.data.data.componentData.dataOptions;\r\n    },\r\n    BarChartOption() {\r\n      const { chartJsonData } = this.chartOptions;\r\n      const res = this.initEchart(chartJsonData);\r\n      return res;\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      apiData: {},\r\n    };\r\n  },\r\n  methods: {\r\n    initEchart(chartdata) {\r\n      const { title } = this.normalOptiosn;\r\n      const yData = chartdata.reduce((pre, cur) => {\r\n        const yName = cur['类型'];\r\n        const isExist = pre.find((v) => v.name === yName);\r\n        if (!isExist) {\r\n          pre.push({\r\n            name: yName,\r\n            data: [cur['数据']],\r\n          });\r\n        } else {\r\n          isExist.data.push(cur['数据']);\r\n        }\r\n        return pre;\r\n      }, []);\r\n      const res = {\r\n        title: {\r\n          text: title,\r\n        },\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: [...new Set(chartdata.map((v) => v['名称']))],\r\n        },\r\n        yAxis: {},\r\n        series: yData.map((item) => ({\r\n          ...item,\r\n          type: 'bar',\r\n        })),\r\n      };\r\n      return res;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.barchart-box {\r\n  caret-color: transparent;\r\n  overflow: auto;\r\n  height: 100%;\r\n  width: 100%;\r\n  .main {\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n"]}]}